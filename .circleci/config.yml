version: 2.1
orbs:
  aws-cli: circleci/aws-cli@1.4.1
jobs:
  create_infrastructure:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/install
      - run: ./.circleci/deploy-stack.sh "ci-stack" "${CIRCLE_WORKFLOW_ID}"
      - run: ./.circleci/create-inventory.sh "${CIRCLE_WORKFLOW_ID}"
      - save_cache:
          key: "inventory-{{ .Environment.CIRCLE_WORKFLOW_ID }}"
          paths: [ "server-inventory.txt" ]
  deploy_app:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - restore_cache:
          keys: [ "inventory-{{ .Environment.CIRCLE_WORKFLOW_ID }}" ]
      - add_ssh_keys:
          fingerprints: [ "df:67:9a:d9:1d:8e:44:b7:38:da:68:6b:b3:1c:4d:c0" ]
      - restore_cache:
          keys: [ 'pip-packages-v1-{{ checksum "deploy/requirements.txt" }}' ]
      - run: ./.circleci/install-ansible.sh
      - save_cache:
          key: pip-packages-v1-{{ checksum "deploy/requirements.txt" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
      - run: ./.circleci/deploy-app.sh
workflows:
  version: 2
  deploy:
    jobs:
      - create_infrastructure
      - deploy_app:
          requires: 
            - create_infrastructure

